<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My calendar</title>

  <link rel="stylesheet" href="styles/style.css">
  <!-- FIX FOR FAVICON.ICO -->
  <link rel="shortcut icon" href="#">
</head>

<body>
  <!-- Header -->
  <%- include('partials/header.ejs') %>
  <%- include('partials/nav.ejs') %>


  <main>

    <h3 id="month">May</h3>
    <h3 id="year">2022</h3>

    <h1 id="week">21</h1>
    
    <nav>
      <span id="previous">förra</span>
      <span id="next">nästa</span>
    </nav>

    <form action="/index" method="post" id="eventPop">
      <label for="title">Title</label><br>
      <input type="text" name="title" id="title"><br>
      <label for="time">Time</label><br>
      <input type="time" name="time" id="time"><br>
      <button type="submit">Create</button>
    </form>

    <div id="box">
      <% events.forEach(ele => { %>

        <div class="eventDiv">
          <p class="event-title"><%- ele.title %></p>
          <p class="event-time"><%- ele.time %></p>
          <button class="edit-btn" data-id="<%= ele.id %>" id="<%= ele.id %>">Edit</button>
          <button class="delete-btn" onclick="deleteEvent(<%= ele.id %>)">Delete</button>
        </div>
  
        <% }); %>
    </div>

    <div id="calendar-wrapper">
      
    </div>

  </main>

  <!-- Footer -->
  <%- include('partials/footer.ejs') %>


  <script>
    let date = new Date();
    let dayOfWeek = date.getDay();

    let months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October",
      "November", "December"
    ];
    let monthElement = document.getElementById("month");
    let yearElement = document.getElementById("year");
    let weekElement = document.getElementById("week");

    date.setDate(date.getDate() + 1);

    function weekDates(date) {
      let day = new Date(date);
      let dayOfWeek = day.getDay();
      let weekBefore = -dayOfWeek;
      let weekAfter = 7 + weekBefore;
      let dates = [];

      day.setDate(day.getDate() + weekBefore);

      for (let i = weekBefore; i < weekAfter; i++) {
        day.setDate(day.getDate() + 1);
        let yearMonthDay = day.toLocaleDateString();
        // let obj = {date: yearMonthDay, dd: "hej"}
        dates.push(yearMonthDay);
      }
      return dates;
    }

    let calendarDates = weekDates(date);
    const calendarWrapper = document.getElementById("calendar-wrapper");

    function currentWeek(dates) {
      calendarWrapper.innerText = "";

      dates.forEach(ele => {
        let li = document.createElement("li");
        li.classList.add("list-item");
        li.innerText = ele;

        const dayWrapper = document.createElement("div");
        dayWrapper.classList.add("day-wrapper");

        const dayBubble = document.createElement("div");
        dayBubble.classList.add("day-bubble");

        const eventWrapper = document.createElement("div");
        eventWrapper.classList.add("event-wrapper");
        eventWrapper.innerText = "JA MEN TJA HÄR TESTAR JAG FÄLTET DÄR EVENTS SKA LIGGA SEN, HOPPAS JAG";

        const addEventButton = document.createElement("button");
        addEventButton.innerText = "ADD EVENT";
        addEventButton.onclick = eventPopUp;

        dayBubble.appendChild(li);
        dayBubble.appendChild(addEventButton);
        dayWrapper.appendChild(dayBubble);
        dayWrapper.appendChild(eventWrapper);
        calendarWrapper.appendChild(dayWrapper);
      });
    }

    currentWeek(calendarDates);

    const previous = document.getElementById("previous");
    const next = document.getElementById("next");

    previous.addEventListener("click", () => {
      // console.log("gå bakåt");

      let first = document.querySelector(".list-item");
      let monday = first.innerText;
      let day = new Date(monday);
      //  Last week
      day.setDate(day.getDate() - 7);
      calendarDates = weekDates(day);
      currentWeek(calendarDates);

      monthElement.innerText = months[day.getMonth()];
      yearElement.innerText = day.getFullYear();
    });

    next.addEventListener("click", () => {
      // console.log("gå framåt");

      let first = document.querySelector(".list-item");
      let monday = first.innerText;
      let day = new Date(monday);
      //  Last week
      day.setDate(day.getDate() + 7);
      calendarDates = weekDates(day);
      currentWeek(calendarDates);

      monthElement.innerText = months[day.getMonth()];
      yearElement.innerText = day.getFullYear();
    });


    // // Creating array for every day in week
    // const week = {
    //   days: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
    // };

    // // Making a varibel for each day in the array
    // for (let i = 0; i < week.days.length; i++) {
    //   const days = week.days[i];

    //   // Creating a wrapper for each day for future events
    //   const dayWrapper = document.createElement("div");
    //   dayWrapper.classList.add("day-wrapper");

    //   // Creating a bubble for each day
    //   const dayBubble = document.createElement("div");
    //   dayBubble.classList.add("day-bubble");
    //   dayBubble.textContent = days;

    //   const calendarWrapper = document.getElementById("calendar");
    //   calendarWrapper.appendChild(dayBubble);
    //   calendarWrapper.appendChild(dayWrapper);

    //   const addEventButton = document.createElement("button");
    //   addEventButton.textContent = "ADD EVENT";
    //   addEventButton.onclick = eventPopUp;

    //   dayBubble.appendChild(addEventButton);

    //   // Testing to see placement of day wrappers
    //   dayWrapper.textContent =
    //     "This is the box where all the events for each day goesThis is the box where all the events for each day goesThis is the box where all the events for each day goes";
    // }

    function eventPopUp() {
      let pop = document.getElementById("eventPop");
      if (pop.style.display === "block") {
        pop.style.display = "none";
      } else {
        pop.style.display = "block"
      }
      console.log(this.parentElement.textContent);
    }

    async function deleteEvent(id) {
      console.log("delete test", id);
      const response = await fetch(`/index/${id}`, {
        method: "delete"
      });

      if (response.redirected) {
        window.location.href = response.url;
      }
    }

    async function editEvent(evt) {
      // const id = Number(evt.target.dataset.id); // data-id -> dataset.id

      const container = evt.target.parentElement;
      const id = container.querySelector(".edit-btn").getAttribute("data-id");
      const title = container.querySelector(".event-title");
      const time = container.querySelector(".event-time");

      // if not editable make them editable
      if (!title.isContentEditable && !time.isContentEditable) {
        title.contentEditable = true;
        time.contentEditable = true;
        // clicking the same button should save the changes
        evt.target.innerText = "Save";
      } else {
        // Second time clicked it should save changes
        // reset element to be non editable
        title.contentEditable = false;
        time.contentEditable = false;
        evt.target.innerText = "Edit";
        // Look at values of titleEl and qudate and submit new quote
        const newEvent = {
          title: title.innerText,
          time: time.innerText,
        };
        const response = await fetch(`/events/${id}`, {
          method: "put",
          body: JSON.stringify(newEvent),
          headers: {
            "Content-Type": "application/json",
          },
        });

        // Check if there is a redirect to follow the new url
        if (response.redirected) {
          window.location.href = response.url;
        }
      }
    }
    document.querySelectorAll(".edit-btn").forEach((btn) => (btn.onclick = editEvent));
  </script>


</body>

</html>